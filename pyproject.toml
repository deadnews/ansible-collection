[project]
name            = "ansible-collection-util"
description     = "Ansible Utils Collection"
version         = "0.0.0"
readme          = "README.md"
license         = "MIT"
authors         = [{ name = "deadnews", email = "deadnewsgit@gmail.com" }]
requires-python = ">=3.12"

dependencies = ["ansible-core>=2.18.5"]

[dependency-groups]
dev = [
  "galaxy-update>=0.0.1",
  "ansible-lint>=25.4.0",
  "mypy>=1.15.0",
  "ruff>=0.11.10",
  "molecule>=24.12.0",
  "molecule-plugins[docker,vagrant]>=23.5.3",
  "pytest>=8.3.5",
  "pytest-ansible>=25.4.1",
]

[tool.ruff]
line-length        = 99
format.line-ending = "lf"

[tool.ruff.lint]
flake8-tidy-imports.ban-relative-imports = "all"
pycodestyle.max-doc-length               = 129
pycodestyle.max-line-length              = 129
pydocstyle.convention                    = "google"

select = ["ALL"]
ignore = [
  "COM812",  # Trailing comma missing
  "FBT001",  # Boolean positional arg in function definition
  "FBT002",  # Boolean default value in function definition
  "ISC001",  # Checks for implicitly concatenated strings on a single line
  "PLR0913", # Too many arguments to function call
  #
  "S603", # Check for execution of untrusted input
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*"     = ["ANN", "D", "E501", "PLC1901", "PLR2004", "S"]

[tool.pytest.ini_options]
addopts   = "--verbose"
testpaths = ["tests"]
markers   = ["docker", "molecule", "no_driver", "vagrant"]

[tool.coverage.report]
exclude_lines = [
  "# pragma: no cover",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.mypy]
disallow_untyped_defs  = true
follow_imports         = "normal"
ignore_missing_imports = true
show_column_numbers    = true
show_error_codes       = true
warn_unused_ignores    = true
exclude                = "^collections/"

[[tool.mypy.overrides]]
module                = ["tests.*"]
disallow_untyped_defs = false

[tool.pyright]
typeCheckingMode = "off"
